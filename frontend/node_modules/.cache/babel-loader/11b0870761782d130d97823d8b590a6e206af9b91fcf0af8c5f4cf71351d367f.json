{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ali\\\\Desktop\\\\SonVersiyon\\\\frontend\\\\src\\\\components\\\\Sidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { FaMoon, FaSun, FaTrash, FaChevronLeft, FaRobot, FaCalculator, FaPlus, FaTimes } from 'react-icons/fa';\nimport './Sidebar.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Sidebar = ({\n  toggleTheme,\n  theme,\n  clearChat,\n  resetModelSelection,\n  selectedModel,\n  children,\n  messages,\n  onSendMessage,\n  fetchChatHistory,\n  user\n}) => {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [activeConversation, setActiveConversation] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Fetch conversations on component mount\n  useEffect(() => {\n    fetchConversations();\n  }, [user]);\n  const fetchConversations = async () => {\n    setLoading(true);\n    try {\n      // Get token from localStorage\n      const token = localStorage.getItem('token');\n      if (token) {\n        const response = await fetch('http://localhost:8000/api/conversations', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setConversations(data);\n\n          // Set active conversation if there's one\n          if (data.length > 0 && !activeConversation) {\n            setActiveConversation(data[0].id);\n          }\n        } else {\n          console.error('Error fetching conversations:', response.statusText);\n          // Demo fallback\n          const demoConversations = [{\n            id: 1,\n            title: 'Matematik Soruları',\n            updated_at: new Date().toISOString()\n          }, {\n            id: 2,\n            title: 'Programlama Yardımı',\n            updated_at: new Date().toISOString()\n          }];\n          setConversations(demoConversations);\n          setActiveConversation(1);\n        }\n      } else {\n        // Demo fallback when no token\n        const demoConversations = [{\n          id: 1,\n          title: 'Matematik Soruları',\n          updated_at: new Date().toISOString()\n        }, {\n          id: 2,\n          title: 'Programlama Yardımı',\n          updated_at: new Date().toISOString()\n        }];\n        setConversations(demoConversations);\n        setActiveConversation(1);\n      }\n    } catch (error) {\n      console.error('Error fetching conversations:', error);\n      // Set some demo conversations for testing\n      const demoConversations = [{\n        id: 1,\n        title: 'Matematik Soruları',\n        updated_at: new Date().toISOString()\n      }, {\n        id: 2,\n        title: 'Programlama Yardımı',\n        updated_at: new Date().toISOString()\n      }];\n      setConversations(demoConversations);\n      setActiveConversation(1);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const createNewConversation = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:8000/api/conversations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          title: 'Yeni Sohbet',\n          model_id: selectedModel === 'api' ? 1 : 2\n        })\n      });\n      if (response.ok) {\n        const newConversation = await response.json();\n        setConversations(prev => [newConversation, ...prev]);\n        setActiveConversation(newConversation.id);\n        clearChat(); // Clear current chat messages\n      } else {\n        console.error('Error creating conversation:', response.statusText);\n        // Demo fallback\n        const newId = Math.max(...conversations.map(c => c.id), 0) + 1;\n        const newConversation = {\n          id: newId,\n          title: 'Yeni Sohbet',\n          updated_at: new Date().toISOString()\n        };\n        setConversations(prev => [newConversation, ...prev]);\n        setActiveConversation(newId);\n        clearChat();\n      }\n    } catch (error) {\n      console.error('Error creating conversation:', error);\n      // Demo fallback\n      const newId = Math.max(...conversations.map(c => c.id), 0) + 1;\n      const newConversation = {\n        id: newId,\n        title: 'Yeni Sohbet',\n        updated_at: new Date().toISOString()\n      };\n      setConversations(prev => [newConversation, ...prev]);\n      setActiveConversation(newId);\n      clearChat();\n    }\n  };\n  const deleteConversation = async (id, e) => {\n    e.stopPropagation(); // Prevent triggering conversation selection\n\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8000/api/conversations/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        setConversations(prev => prev.filter(conv => conv.id !== id));\n\n        // If we deleted the active conversation, select another one\n        if (activeConversation === id) {\n          const remainingConversations = conversations.filter(conv => conv.id !== id);\n          if (remainingConversations.length > 0) {\n            setActiveConversation(remainingConversations[0].id);\n          } else {\n            setActiveConversation(null);\n            clearChat();\n          }\n        }\n      } else {\n        console.error('Error deleting conversation:', response.statusText);\n        // Demo fallback\n        setConversations(prev => prev.filter(conv => conv.id !== id));\n        if (activeConversation === id) {\n          const remainingConversations = conversations.filter(conv => conv.id !== id);\n          if (remainingConversations.length > 0) {\n            setActiveConversation(remainingConversations[0].id);\n          } else {\n            setActiveConversation(null);\n            clearChat();\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error deleting conversation:', error);\n      // Demo fallback\n      setConversations(prev => prev.filter(conv => conv.id !== id));\n      if (activeConversation === id) {\n        const remainingConversations = conversations.filter(conv => conv.id !== id);\n        if (remainingConversations.length > 0) {\n          setActiveConversation(remainingConversations[0].id);\n        } else {\n          setActiveConversation(null);\n          clearChat();\n        }\n      }\n    }\n  };\n  const selectConversation = async id => {\n    setActiveConversation(id);\n    // Fetch messages for the selected conversation\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8000/api/conversations/${id}/messages`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        // Assuming your fetchChatHistory function can load messages for a specific conversation\n        fetchChatHistory(selectedModel, id);\n      } else {\n        console.error('Error fetching conversation messages:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error fetching conversation messages:', error);\n    }\n  };\n\n  // Format date in a user-friendly way\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [children, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"model-info\",\n        children: selectedModel === 'api' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(FaRobot, {\n            className: \"model-icon-small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Haz\\u0131r API Modeli\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(FaCalculator, {\n            className: \"model-icon-small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\xD6zel E\\u011Fitilmi\\u015F Model\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-chat-button\",\n        onClick: createNewConversation,\n        title: \"Yeni Sohbet\",\n        children: [/*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Yeni Sohbet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversation-list\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-conversations\",\n        children: \"Sohbetler y\\xFCkleniyor...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this) : conversations.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-conversations\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Hen\\xFCz sohbet bulunmuyor.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createNewConversation,\n          className: \"start-chat-button\",\n          children: [/*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), \" \\u0130lk sohbetinizi ba\\u015Flat\\u0131n\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this) : conversations.map(conv => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `conversation-item ${activeConversation === conv.id ? 'active' : ''}`,\n        onClick: () => selectConversation(conv.id),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"conversation-title\",\n          children: conv.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"conversation-date\",\n          children: formatDate(conv.updated_at)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-conversation\",\n          onClick: e => deleteConversation(conv.id, e),\n          title: \"Sohbeti Sil\",\n          children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 15\n        }, this)]\n      }, conv.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sidebar-button\",\n        onClick: toggleTheme,\n        title: theme === 'light' ? 'Karanlık Moda Geç' : 'Aydınlık Moda Geç',\n        children: theme === 'light' ? /*#__PURE__*/_jsxDEV(FaMoon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(FaSun, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sidebar-button\",\n        onClick: clearChat,\n        title: \"Sohbeti Temizle\",\n        children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sidebar-button\",\n        onClick: resetModelSelection,\n        title: \"Model Se\\xE7imine D\\xF6n\",\n        children: /*#__PURE__*/_jsxDEV(FaChevronLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"04L6mbC6NGPtwCAATeJHQiSieSU=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","useEffect","FaMoon","FaSun","FaTrash","FaChevronLeft","FaRobot","FaCalculator","FaPlus","FaTimes","jsxDEV","_jsxDEV","Fragment","_Fragment","Sidebar","toggleTheme","theme","clearChat","resetModelSelection","selectedModel","children","messages","onSendMessage","fetchChatHistory","user","_s","conversations","setConversations","activeConversation","setActiveConversation","loading","setLoading","fetchConversations","token","localStorage","getItem","response","fetch","headers","ok","data","json","length","id","console","error","statusText","demoConversations","title","updated_at","Date","toISOString","createNewConversation","method","body","JSON","stringify","model_id","newConversation","prev","newId","Math","max","map","c","deleteConversation","e","stopPropagation","filter","conv","remainingConversations","selectConversation","formatDate","dateString","date","toLocaleDateString","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ali/Desktop/SonVersiyon/frontend/src/components/Sidebar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { FaMoon, FaSun, FaTrash, FaChevronLeft, FaRobot, FaCalculator, FaPlus, FaTimes } from 'react-icons/fa';\r\nimport './Sidebar.css';\r\n\r\nconst Sidebar = ({ \r\n  toggleTheme, \r\n  theme, \r\n  clearChat, \r\n  resetModelSelection, \r\n  selectedModel, \r\n  children,\r\n  messages,\r\n  onSendMessage,\r\n  fetchChatHistory,\r\n  user\r\n}) => {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [activeConversation, setActiveConversation] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Fetch conversations on component mount\r\n  useEffect(() => {\r\n    fetchConversations();\r\n  }, [user]);\r\n\r\n  const fetchConversations = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // Get token from localStorage\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (token) {\r\n        const response = await fetch('http://localhost:8000/api/conversations', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        \r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setConversations(data);\r\n          \r\n          // Set active conversation if there's one\r\n          if (data.length > 0 && !activeConversation) {\r\n            setActiveConversation(data[0].id);\r\n          }\r\n        } else {\r\n          console.error('Error fetching conversations:', response.statusText);\r\n          // Demo fallback\r\n          const demoConversations = [\r\n            { id: 1, title: 'Matematik Soruları', updated_at: new Date().toISOString() },\r\n            { id: 2, title: 'Programlama Yardımı', updated_at: new Date().toISOString() }\r\n          ];\r\n          setConversations(demoConversations);\r\n          setActiveConversation(1);\r\n        }\r\n      } else {\r\n        // Demo fallback when no token\r\n        const demoConversations = [\r\n          { id: 1, title: 'Matematik Soruları', updated_at: new Date().toISOString() },\r\n          { id: 2, title: 'Programlama Yardımı', updated_at: new Date().toISOString() }\r\n        ];\r\n        setConversations(demoConversations);\r\n        setActiveConversation(1);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching conversations:', error);\r\n      // Set some demo conversations for testing\r\n      const demoConversations = [\r\n        { id: 1, title: 'Matematik Soruları', updated_at: new Date().toISOString() },\r\n        { id: 2, title: 'Programlama Yardımı', updated_at: new Date().toISOString() }\r\n      ];\r\n      setConversations(demoConversations);\r\n      setActiveConversation(1);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const createNewConversation = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:8000/api/conversations', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({\r\n          title: 'Yeni Sohbet',\r\n          model_id: selectedModel === 'api' ? 1 : 2\r\n        })\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const newConversation = await response.json();\r\n        setConversations(prev => [newConversation, ...prev]);\r\n        setActiveConversation(newConversation.id);\r\n        clearChat(); // Clear current chat messages\r\n      } else {\r\n        console.error('Error creating conversation:', response.statusText);\r\n        // Demo fallback\r\n        const newId = Math.max(...conversations.map(c => c.id), 0) + 1;\r\n        const newConversation = {\r\n          id: newId,\r\n          title: 'Yeni Sohbet',\r\n          updated_at: new Date().toISOString()\r\n        };\r\n        setConversations(prev => [newConversation, ...prev]);\r\n        setActiveConversation(newId);\r\n        clearChat();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating conversation:', error);\r\n      // Demo fallback\r\n      const newId = Math.max(...conversations.map(c => c.id), 0) + 1;\r\n      const newConversation = {\r\n        id: newId,\r\n        title: 'Yeni Sohbet',\r\n        updated_at: new Date().toISOString()\r\n      };\r\n      setConversations(prev => [newConversation, ...prev]);\r\n      setActiveConversation(newId);\r\n      clearChat();\r\n    }\r\n  };\r\n\r\n  const deleteConversation = async (id, e) => {\r\n    e.stopPropagation(); // Prevent triggering conversation selection\r\n    \r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch(`http://localhost:8000/api/conversations/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      if (response.ok) {\r\n        setConversations(prev => prev.filter(conv => conv.id !== id));\r\n        \r\n        // If we deleted the active conversation, select another one\r\n        if (activeConversation === id) {\r\n          const remainingConversations = conversations.filter(conv => conv.id !== id);\r\n          if (remainingConversations.length > 0) {\r\n            setActiveConversation(remainingConversations[0].id);\r\n          } else {\r\n            setActiveConversation(null);\r\n            clearChat();\r\n          }\r\n        }\r\n      } else {\r\n        console.error('Error deleting conversation:', response.statusText);\r\n        // Demo fallback\r\n        setConversations(prev => prev.filter(conv => conv.id !== id));\r\n        \r\n        if (activeConversation === id) {\r\n          const remainingConversations = conversations.filter(conv => conv.id !== id);\r\n          if (remainingConversations.length > 0) {\r\n            setActiveConversation(remainingConversations[0].id);\r\n          } else {\r\n            setActiveConversation(null);\r\n            clearChat();\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting conversation:', error);\r\n      // Demo fallback\r\n      setConversations(prev => prev.filter(conv => conv.id !== id));\r\n      \r\n      if (activeConversation === id) {\r\n        const remainingConversations = conversations.filter(conv => conv.id !== id);\r\n        if (remainingConversations.length > 0) {\r\n          setActiveConversation(remainingConversations[0].id);\r\n        } else {\r\n          setActiveConversation(null);\r\n          clearChat();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const selectConversation = async (id) => {\r\n    setActiveConversation(id);\r\n    // Fetch messages for the selected conversation\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch(`http://localhost:8000/api/conversations/${id}/messages`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      if (response.ok) {\r\n        // Assuming your fetchChatHistory function can load messages for a specific conversation\r\n        fetchChatHistory(selectedModel, id);\r\n      } else {\r\n        console.error('Error fetching conversation messages:', response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching conversation messages:', error);\r\n    }\r\n  };\r\n\r\n  // Format date in a user-friendly way\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString();\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      {children}\r\n      \r\n      <div className=\"sidebar-header\">\r\n        <div className=\"model-info\">\r\n          {selectedModel === 'api' ? (\r\n            <>\r\n              <FaRobot className=\"model-icon-small\" />\r\n              <span>Hazır API Modeli</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <FaCalculator className=\"model-icon-small\" />\r\n              <span>Özel Eğitilmiş Model</span>\r\n            </>\r\n          )}\r\n        </div>\r\n        \r\n        <button \r\n          className=\"new-chat-button\" \r\n          onClick={createNewConversation}\r\n          title=\"Yeni Sohbet\"\r\n        >\r\n          <FaPlus /> <span>Yeni Sohbet</span>\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"conversation-list\">\r\n        {loading ? (\r\n          <div className=\"loading-conversations\">Sohbetler yükleniyor...</div>\r\n        ) : conversations.length === 0 ? (\r\n          <div className=\"no-conversations\">\r\n            <p>Henüz sohbet bulunmuyor.</p>\r\n            <button onClick={createNewConversation} className=\"start-chat-button\">\r\n              <FaPlus /> İlk sohbetinizi başlatın\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          conversations.map(conv => (\r\n            <div \r\n              key={conv.id} \r\n              className={`conversation-item ${activeConversation === conv.id ? 'active' : ''}`}\r\n              onClick={() => selectConversation(conv.id)}\r\n            >\r\n              <div className=\"conversation-title\">{conv.title}</div>\r\n              <div className=\"conversation-date\">{formatDate(conv.updated_at)}</div>\r\n              <button \r\n                className=\"delete-conversation\" \r\n                onClick={(e) => deleteConversation(conv.id, e)}\r\n                title=\"Sohbeti Sil\"\r\n              >\r\n                <FaTimes />\r\n              </button>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"sidebar-buttons\">\r\n        <button \r\n          className=\"sidebar-button\" \r\n          onClick={toggleTheme}\r\n          title={theme === 'light' ? 'Karanlık Moda Geç' : 'Aydınlık Moda Geç'}\r\n        >\r\n          {theme === 'light' ? <FaMoon /> : <FaSun />}\r\n        </button>\r\n        \r\n        <button \r\n          className=\"sidebar-button\" \r\n          onClick={clearChat}\r\n          title=\"Sohbeti Temizle\"\r\n        >\r\n          <FaTrash />\r\n        </button>\r\n        \r\n        <button \r\n          className=\"sidebar-button\" \r\n          onClick={resetModelSelection}\r\n          title=\"Model Seçimine Dön\"\r\n        >\r\n          <FaChevronLeft />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}