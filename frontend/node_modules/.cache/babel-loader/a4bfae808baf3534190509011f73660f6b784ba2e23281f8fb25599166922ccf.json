{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ali\\\\Desktop\\\\SonVersiyon\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/Layout/Header';\nimport Footer from './components/Layout/Footer';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport Login from './components/Auth/Login';\nimport Register from './components/Auth/Register';\nimport UserProfile from './components/UserProfile';\nimport ChatArea from './components/ChatArea';\nimport LandingPage from './components/Layout/LandingPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [chats, setChats] = useState([]);\n  const [activeChat, setActiveChat] = useState(null);\n  const [isDarkMode, setIsDarkMode] = useState(localStorage.getItem('darkMode') === 'true');\n  useEffect(() => {\n    // Kullanıcı verilerini yükle ve format tutarlılığı sağla\n    const loadUserData = () => {\n      const storedUser = localStorage.getItem('user');\n      if (storedUser) {\n        try {\n          const userData = JSON.parse(storedUser);\n\n          // Tutarlı alan adları sağla (camelCase ve snake_case karışımını düzelt)\n          const normalizedUser = {\n            id: userData.id || userData.user_id || null,\n            email: userData.email || '',\n            name: userData.name || userData.username || '',\n            created_at: userData.created_at || userData.createdAt || new Date().toISOString(),\n            last_login: userData.last_login || userData.lastLogin || null\n          };\n          setUser(normalizedUser);\n          localStorage.setItem('user', JSON.stringify(normalizedUser));\n        } catch (error) {\n          console.error('User data parsing error:', error);\n        }\n      }\n    };\n    loadUserData();\n\n    // Eğer localStorage'da chat yok ise veya oturum açtıktan sonra yüklüyorsak API'den çekmeyi deneyelim\n    const loadChats = async () => {\n      try {\n        if (localStorage.getItem('token')) {\n          // API'den chat geçmişini yüklemeyi dene\n          const response = await fetch('http://localhost:8000/api/chats', {\n            headers: {\n              'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n          });\n          if (response.ok) {\n            const chatData = await response.json();\n            setChats(chatData);\n            localStorage.setItem('chats', JSON.stringify(chatData));\n            return;\n          }\n        }\n\n        // API çağrısı başarısız olursa localStorage'dan yükle\n        const storedChats = localStorage.getItem('chats');\n        if (storedChats) {\n          setChats(JSON.parse(storedChats));\n        }\n      } catch (err) {\n        console.error('Sohbet geçmişi yüklenirken hata:', err);\n        // Hata durumunda localStorage'dan yükle\n        const storedChats = localStorage.getItem('chats');\n        if (storedChats) {\n          setChats(JSON.parse(storedChats));\n        }\n      }\n    };\n    loadChats();\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('darkMode', isDarkMode);\n    document.body.classList.toggle('dark-mode', isDarkMode);\n  }, [isDarkMode]);\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n  const handleLogin = userData => {\n    // Tutarlı alan adları sağla\n    const normalizedUser = {\n      id: userData.id || userData.user_id || null,\n      email: userData.email || '',\n      name: userData.name || userData.username || '',\n      created_at: userData.created_at || userData.createdAt || new Date().toISOString(),\n      last_login: userData.last_login || userData.lastLogin || null\n    };\n    setUser(normalizedUser);\n    localStorage.setItem('user', JSON.stringify(normalizedUser));\n  };\n  const handleLogout = () => {\n    setUser(null);\n    setChats([]);\n    setActiveChat(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('chats');\n    localStorage.removeItem('token');\n  };\n  const handleUpdateUser = updatedUser => {\n    // Tutarlı alan adları sağla\n    const normalizedUser = {\n      ...user,\n      ...updatedUser,\n      id: updatedUser.id || updatedUser.user_id || user.id,\n      name: updatedUser.name || updatedUser.username || user.name,\n      created_at: updatedUser.created_at || updatedUser.createdAt || user.created_at,\n      last_login: updatedUser.last_login || updatedUser.lastLogin || user.last_login\n    };\n    setUser(normalizedUser);\n    localStorage.setItem('user', JSON.stringify(normalizedUser));\n  };\n  const handleNewChat = async () => {\n    const newChat = {\n      id: Date.now().toString(),\n      title: 'Yeni Sohbet',\n      messages: [],\n      createdAt: new Date().toISOString()\n    };\n    try {\n      const response = await fetch('http://localhost:8000/api/chats', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(newChat)\n      });\n      if (response.ok) {\n        const savedChat = await response.json();\n        if (!savedChat.messages) savedChat.messages = [];\n        const updatedChats = [savedChat, ...chats];\n        setChats(updatedChats);\n        setActiveChat(savedChat);\n        localStorage.setItem('chats', JSON.stringify(updatedChats));\n      } else {\n        // Fallback to local storage in demo mode\n        const updatedChats = [newChat, ...chats];\n        setChats(updatedChats);\n        setActiveChat(newChat);\n        localStorage.setItem('chats', JSON.stringify(updatedChats));\n      }\n    } catch (err) {\n      console.error('Error creating new chat:', err);\n      // Fallback to local storage in demo mode\n      const updatedChats = [newChat, ...chats];\n      setChats(updatedChats);\n      setActiveChat(newChat);\n      localStorage.setItem('chats', JSON.stringify(updatedChats));\n    }\n  };\n  const handleDeleteChat = async chatId => {\n    try {\n      const response = await fetch(`http://localhost:8000/api/chats/${chatId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.ok) {\n        const updatedChats = chats.filter(chat => chat.id !== chatId);\n        setChats(updatedChats);\n        if ((activeChat === null || activeChat === void 0 ? void 0 : activeChat.id) === chatId) {\n          setActiveChat(null);\n        }\n        localStorage.setItem('chats', JSON.stringify(updatedChats));\n      }\n    } catch (err) {\n      console.error('Error deleting chat:', err);\n      // Fallback to local storage in demo mode\n      const updatedChats = chats.filter(chat => chat.id !== chatId);\n      setChats(updatedChats);\n      if ((activeChat === null || activeChat === void 0 ? void 0 : activeChat.id) === chatId) {\n        setActiveChat(null);\n      }\n      localStorage.setItem('chats', JSON.stringify(updatedChats));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `app ${isDarkMode ? 'dark' : 'light'}`,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        user: user,\n        onLogout: handleLogout,\n        isDarkMode: isDarkMode,\n        toggleDarkMode: toggleDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main-content\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: user ? /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Login, {\n              onLogin: handleLogin,\n              isDarkMode: isDarkMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            element: user ? /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Register, {\n              onLogin: handleLogin,\n              isDarkMode: isDarkMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/profile\",\n            element: user ? /*#__PURE__*/_jsxDEV(UserProfile, {\n              user: user,\n              onLogout: handleLogout,\n              onUpdateUser: handleUpdateUser,\n              isDarkMode: isDarkMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/chat\",\n            element: user ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-layout\",\n              children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n                chats: chats,\n                activeChat: activeChat,\n                onChatSelect: setActiveChat,\n                onNewChat: handleNewChat,\n                onDeleteChat: handleDeleteChat,\n                isDarkMode: isDarkMode,\n                user: user\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-container\",\n                children: activeChat ? /*#__PURE__*/_jsxDEV(ChatArea, {\n                  messages: activeChat.messages || [],\n                  onSendMessage: async message => {\n                    // Öncelikle UI'ı güncelleyelim\n                    const newMessage = {\n                      id: Date.now().toString(),\n                      content: message,\n                      sender: 'user',\n                      timestamp: new Date().toISOString()\n                    };\n                    const updatedChat = {\n                      ...activeChat,\n                      messages: [...(activeChat.messages || []), newMessage]\n                    };\n\n                    // UI'yi hemen güncelle (optimistik güncelleme)\n                    const updatedChats = chats.map(chat => chat.id === activeChat.id ? updatedChat : chat);\n                    setChats(updatedChats);\n                    setActiveChat(updatedChat);\n                    localStorage.setItem('chats', JSON.stringify(updatedChats));\n                    try {\n                      // Mesajı API'ye gönder\n                      const response = await fetch('http://localhost:8000/api/math-solver', {\n                        method: 'POST',\n                        headers: {\n                          'Content-Type': 'application/json',\n                          'Authorization': `Bearer ${localStorage.getItem('token')}`\n                        },\n                        body: JSON.stringify({\n                          message: message,\n                          model_type: 'local'\n                        })\n                      });\n                      if (response.ok) {\n                        const data = await response.json();\n\n                        // Bot yanıtını da ekleyelim\n                        const botResponse = {\n                          id: Date.now().toString() + 1,\n                          content: data.response,\n                          sender: 'bot',\n                          timestamp: new Date().toISOString()\n                        };\n                        const finalChat = {\n                          ...updatedChat,\n                          messages: [...(updatedChat.messages || []), botResponse]\n                        };\n                        const finalChats = chats.map(chat => chat.id === activeChat.id ? finalChat : chat);\n                        setChats(finalChats);\n                        setActiveChat(finalChat);\n                        localStorage.setItem('chats', JSON.stringify(finalChats));\n                      }\n                    } catch (err) {\n                      console.error('Mesaj gönderme hatası:', err);\n                      // Hata durumunda basit bir bot yanıtı gösterelim\n                      const errorResponse = {\n                        id: Date.now().toString() + 1,\n                        content: \"Üzgünüm, bir hata oluştu. Lütfen tekrar deneyin.\",\n                        sender: 'bot',\n                        timestamp: new Date().toISOString()\n                      };\n                      const errorChat = {\n                        ...updatedChat,\n                        messages: [...(updatedChat.messages || []), errorResponse]\n                      };\n                      const errorChats = chats.map(chat => chat.id === activeChat.id ? errorChat : chat);\n                      setChats(errorChats);\n                      setActiveChat(errorChat);\n                      localStorage.setItem('chats', JSON.stringify(errorChats));\n                    }\n                  },\n                  theme: isDarkMode ? 'dark' : 'light',\n                  isLoading: false\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"welcome-message\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: [\"Ho\\u015F Geldiniz, \", user.name || 'Kullanıcı', \"!\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Yeni bir sohbet ba\\u015Flatmak i\\xE7in sol men\\xFCden \\\"Yeni Sohbet\\\" butonuna t\\u0131klay\\u0131n.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: user ? /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(LandingPage, {\n              isDarkMode: isDarkMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        isDarkMode: isDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"f1WH8+RXeu4NOWNRCQKgZYAH6lY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","Header","Footer","Sidebar","Login","Register","UserProfile","ChatArea","LandingPage","jsxDEV","_jsxDEV","App","_s","user","setUser","chats","setChats","activeChat","setActiveChat","isDarkMode","setIsDarkMode","localStorage","getItem","loadUserData","storedUser","userData","JSON","parse","normalizedUser","id","user_id","email","name","username","created_at","createdAt","Date","toISOString","last_login","lastLogin","setItem","stringify","error","console","loadChats","response","fetch","headers","ok","chatData","json","storedChats","err","document","body","classList","toggle","toggleDarkMode","handleLogin","handleLogout","removeItem","handleUpdateUser","updatedUser","handleNewChat","newChat","now","toString","title","messages","method","savedChat","updatedChats","handleDeleteChat","chatId","filter","chat","children","className","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","onLogin","onUpdateUser","onChatSelect","onNewChat","onDeleteChat","onSendMessage","message","newMessage","content","sender","timestamp","updatedChat","map","model_type","data","botResponse","finalChat","finalChats","errorResponse","errorChat","errorChats","theme","isLoading","_c","$RefreshReg$"],"sources":["C:/Users/ali/Desktop/SonVersiyon/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport './App.css';\r\nimport Header from './components/Layout/Header';\r\nimport Footer from './components/Layout/Footer';\r\nimport Sidebar from './components/Sidebar/Sidebar';\r\nimport Login from './components/Auth/Login';\r\nimport Register from './components/Auth/Register';\r\nimport UserProfile from './components/UserProfile';\r\nimport ChatArea from './components/ChatArea';\r\nimport LandingPage from './components/Layout/LandingPage';\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n  const [chats, setChats] = useState([]);\r\n  const [activeChat, setActiveChat] = useState(null);\r\n  const [isDarkMode, setIsDarkMode] = useState(\r\n    localStorage.getItem('darkMode') === 'true'\r\n  );\r\n\r\n  useEffect(() => {\r\n    // Kullanıcı verilerini yükle ve format tutarlılığı sağla\r\n    const loadUserData = () => {\r\n      const storedUser = localStorage.getItem('user');\r\n      if (storedUser) {\r\n        try {\r\n          const userData = JSON.parse(storedUser);\r\n          \r\n          // Tutarlı alan adları sağla (camelCase ve snake_case karışımını düzelt)\r\n          const normalizedUser = {\r\n            id: userData.id || userData.user_id || null,\r\n            email: userData.email || '',\r\n            name: userData.name || userData.username || '',\r\n            created_at: userData.created_at || userData.createdAt || new Date().toISOString(),\r\n            last_login: userData.last_login || userData.lastLogin || null\r\n          };\r\n          \r\n          setUser(normalizedUser);\r\n          localStorage.setItem('user', JSON.stringify(normalizedUser));\r\n        } catch (error) {\r\n          console.error('User data parsing error:', error);\r\n        }\r\n      }\r\n    };\r\n    \r\n    loadUserData();\r\n\r\n    // Eğer localStorage'da chat yok ise veya oturum açtıktan sonra yüklüyorsak API'den çekmeyi deneyelim\r\n    const loadChats = async () => {\r\n      try {\r\n        if (localStorage.getItem('token')) {\r\n          // API'den chat geçmişini yüklemeyi dene\r\n          const response = await fetch('http://localhost:8000/api/chats', {\r\n            headers: {\r\n              'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n          });\r\n          \r\n          if (response.ok) {\r\n            const chatData = await response.json();\r\n            setChats(chatData);\r\n            localStorage.setItem('chats', JSON.stringify(chatData));\r\n            return;\r\n          }\r\n        }\r\n        \r\n        // API çağrısı başarısız olursa localStorage'dan yükle\r\n        const storedChats = localStorage.getItem('chats');\r\n        if (storedChats) {\r\n          setChats(JSON.parse(storedChats));\r\n        }\r\n      } catch (err) {\r\n        console.error('Sohbet geçmişi yüklenirken hata:', err);\r\n        // Hata durumunda localStorage'dan yükle\r\n        const storedChats = localStorage.getItem('chats');\r\n        if (storedChats) {\r\n          setChats(JSON.parse(storedChats));\r\n        }\r\n      }\r\n    };\r\n    \r\n    loadChats();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('darkMode', isDarkMode);\r\n    document.body.classList.toggle('dark-mode', isDarkMode);\r\n  }, [isDarkMode]);\r\n\r\n  const toggleDarkMode = () => {\r\n    setIsDarkMode(!isDarkMode);\r\n  };\r\n\r\n  const handleLogin = (userData) => {\r\n    // Tutarlı alan adları sağla\r\n    const normalizedUser = {\r\n      id: userData.id || userData.user_id || null,\r\n      email: userData.email || '',\r\n      name: userData.name || userData.username || '',\r\n      created_at: userData.created_at || userData.createdAt || new Date().toISOString(),\r\n      last_login: userData.last_login || userData.lastLogin || null\r\n    };\r\n    \r\n    setUser(normalizedUser);\r\n    localStorage.setItem('user', JSON.stringify(normalizedUser));\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setUser(null);\r\n    setChats([]);\r\n    setActiveChat(null);\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('chats');\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n  const handleUpdateUser = (updatedUser) => {\r\n    // Tutarlı alan adları sağla\r\n    const normalizedUser = {\r\n      ...user,\r\n      ...updatedUser,\r\n      id: updatedUser.id || updatedUser.user_id || user.id,\r\n      name: updatedUser.name || updatedUser.username || user.name,\r\n      created_at: updatedUser.created_at || updatedUser.createdAt || user.created_at,\r\n      last_login: updatedUser.last_login || updatedUser.lastLogin || user.last_login\r\n    };\r\n    \r\n    setUser(normalizedUser);\r\n    localStorage.setItem('user', JSON.stringify(normalizedUser));\r\n  };\r\n\r\n  const handleNewChat = async () => {\r\n    const newChat = {\r\n      id: Date.now().toString(),\r\n      title: 'Yeni Sohbet',\r\n      messages: [],\r\n      createdAt: new Date().toISOString()\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/chats', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n        body: JSON.stringify(newChat)\r\n      });\r\n\r\n      if (response.ok) {\r\n        const savedChat = await response.json();\r\n        if (!savedChat.messages) savedChat.messages = [];\r\n        const updatedChats = [savedChat, ...chats];\r\n        setChats(updatedChats);\r\n        setActiveChat(savedChat);\r\n        localStorage.setItem('chats', JSON.stringify(updatedChats));\r\n      } else {\r\n        // Fallback to local storage in demo mode\r\n        const updatedChats = [newChat, ...chats];\r\n        setChats(updatedChats);\r\n        setActiveChat(newChat);\r\n        localStorage.setItem('chats', JSON.stringify(updatedChats));\r\n      }\r\n    } catch (err) {\r\n      console.error('Error creating new chat:', err);\r\n      // Fallback to local storage in demo mode\r\n      const updatedChats = [newChat, ...chats];\r\n      setChats(updatedChats);\r\n      setActiveChat(newChat);\r\n      localStorage.setItem('chats', JSON.stringify(updatedChats));\r\n    }\r\n  };\r\n\r\n  const handleDeleteChat = async (chatId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8000/api/chats/${chatId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n      });\r\n\r\n      if (response.ok) {\r\n        const updatedChats = chats.filter(chat => chat.id !== chatId);\r\n        setChats(updatedChats);\r\n        if (activeChat?.id === chatId) {\r\n          setActiveChat(null);\r\n        }\r\n        localStorage.setItem('chats', JSON.stringify(updatedChats));\r\n      }\r\n    } catch (err) {\r\n      console.error('Error deleting chat:', err);\r\n      // Fallback to local storage in demo mode\r\n      const updatedChats = chats.filter(chat => chat.id !== chatId);\r\n      setChats(updatedChats);\r\n      if (activeChat?.id === chatId) {\r\n        setActiveChat(null);\r\n      }\r\n      localStorage.setItem('chats', JSON.stringify(updatedChats));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className={`app ${isDarkMode ? 'dark' : 'light'}`}>\r\n        <Header \r\n          user={user} \r\n          onLogout={handleLogout} \r\n          isDarkMode={isDarkMode}\r\n          toggleDarkMode={toggleDarkMode}\r\n        />\r\n        <main className=\"main-content\">\r\n          <Routes>\r\n            <Route\r\n              path=\"/login\"\r\n              element={\r\n                user ? (\r\n                  <Navigate to=\"/\" />\r\n                ) : (\r\n                  <Login onLogin={handleLogin} isDarkMode={isDarkMode} />\r\n                )\r\n              }\r\n            />\r\n            <Route\r\n              path=\"/register\"\r\n              element={\r\n                user ? (\r\n                  <Navigate to=\"/\" />\r\n                ) : (\r\n                  <Register onLogin={handleLogin} isDarkMode={isDarkMode} />\r\n                )\r\n              }\r\n            />\r\n            <Route\r\n              path=\"/profile\"\r\n              element={\r\n                user ? (\r\n                  <UserProfile\r\n                    user={user}\r\n                    onLogout={handleLogout}\r\n                    onUpdateUser={handleUpdateUser}\r\n                    isDarkMode={isDarkMode}\r\n                  />\r\n                ) : (\r\n                  <Navigate to=\"/login\" />\r\n                )\r\n              }\r\n            />\r\n            <Route\r\n              path=\"/chat\"\r\n              element={\r\n                user ? (\r\n                  <div className=\"chat-layout\">\r\n                    <Sidebar\r\n                      chats={chats}\r\n                      activeChat={activeChat}\r\n                      onChatSelect={setActiveChat}\r\n                      onNewChat={handleNewChat}\r\n                      onDeleteChat={handleDeleteChat}\r\n                      isDarkMode={isDarkMode}\r\n                      user={user}\r\n                    />\r\n                    <div className=\"chat-container\">\r\n                      {activeChat ? (\r\n                        <ChatArea\r\n                          messages={activeChat.messages || []}\r\n                          onSendMessage={async (message) => {\r\n                            // Öncelikle UI'ı güncelleyelim\r\n                            const newMessage = {\r\n                              id: Date.now().toString(),\r\n                              content: message,\r\n                              sender: 'user',\r\n                              timestamp: new Date().toISOString()\r\n                            };\r\n                            \r\n                            const updatedChat = {\r\n                              ...activeChat,\r\n                              messages: [...(activeChat.messages || []), newMessage]\r\n                            };\r\n                            \r\n                            // UI'yi hemen güncelle (optimistik güncelleme)\r\n                            const updatedChats = chats.map(chat => \r\n                              chat.id === activeChat.id ? updatedChat : chat\r\n                            );\r\n                            setChats(updatedChats);\r\n                            setActiveChat(updatedChat);\r\n                            localStorage.setItem('chats', JSON.stringify(updatedChats));\r\n                            \r\n                            try {\r\n                              // Mesajı API'ye gönder\r\n                              const response = await fetch('http://localhost:8000/api/math-solver', {\r\n                                method: 'POST',\r\n                                headers: {\r\n                                  'Content-Type': 'application/json',\r\n                                  'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                                },\r\n                                body: JSON.stringify({\r\n                                  message: message,\r\n                                  model_type: 'local'\r\n                                })\r\n                              });\r\n                              \r\n                              if (response.ok) {\r\n                                const data = await response.json();\r\n                                \r\n                                // Bot yanıtını da ekleyelim\r\n                                const botResponse = {\r\n                                  id: Date.now().toString() + 1,\r\n                                  content: data.response,\r\n                                  sender: 'bot',\r\n                                  timestamp: new Date().toISOString()\r\n                                };\r\n                                \r\n                                const finalChat = {\r\n                                  ...updatedChat,\r\n                                  messages: [...(updatedChat.messages || []), botResponse]\r\n                                };\r\n                                \r\n                                const finalChats = chats.map(chat => \r\n                                  chat.id === activeChat.id ? finalChat : chat\r\n                                );\r\n                                \r\n                                setChats(finalChats);\r\n                                setActiveChat(finalChat);\r\n                                localStorage.setItem('chats', JSON.stringify(finalChats));\r\n                              }\r\n                            } catch (err) {\r\n                              console.error('Mesaj gönderme hatası:', err);\r\n                              // Hata durumunda basit bir bot yanıtı gösterelim\r\n                              const errorResponse = {\r\n                                id: Date.now().toString() + 1,\r\n                                content: \"Üzgünüm, bir hata oluştu. Lütfen tekrar deneyin.\",\r\n                                sender: 'bot',\r\n                                timestamp: new Date().toISOString()\r\n                              };\r\n                              \r\n                              const errorChat = {\r\n                                ...updatedChat,\r\n                                messages: [...(updatedChat.messages || []), errorResponse]\r\n                              };\r\n                              \r\n                              const errorChats = chats.map(chat => \r\n                                chat.id === activeChat.id ? errorChat : chat\r\n                              );\r\n                              \r\n                              setChats(errorChats);\r\n                              setActiveChat(errorChat);\r\n                              localStorage.setItem('chats', JSON.stringify(errorChats));\r\n                            }\r\n                          }}\r\n                          theme={isDarkMode ? 'dark' : 'light'}\r\n                          isLoading={false}\r\n                        />\r\n                      ) : (\r\n                        <div className=\"welcome-message\">\r\n                          <h2>Hoş Geldiniz, {user.name || 'Kullanıcı'}!</h2>\r\n                          <p>Yeni bir sohbet başlatmak için sol menüden \"Yeni Sohbet\" butonuna tıklayın.</p>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <Navigate to=\"/login\" />\r\n                )\r\n              }\r\n            />\r\n            <Route\r\n              path=\"/\"\r\n              element={\r\n                user ? (\r\n                  <Navigate to=\"/chat\" />\r\n                ) : (\r\n                  <LandingPage isDarkMode={isDarkMode} />\r\n                )\r\n              }\r\n            />\r\n          </Routes>\r\n        </main>\r\n        <Footer isDarkMode={isDarkMode} />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AACnF,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,OAAO,MAAM,8BAA8B;AAClD,OAAOC,KAAK,MAAM,yBAAyB;AAC3C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,WAAW,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACyB,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAC1C2B,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,KAAK,MACvC,CAAC;EAED3B,SAAS,CAAC,MAAM;IACd;IACA,MAAM4B,YAAY,GAAGA,CAAA,KAAM;MACzB,MAAMC,UAAU,GAAGH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MAC/C,IAAIE,UAAU,EAAE;QACd,IAAI;UACF,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACH,UAAU,CAAC;;UAEvC;UACA,MAAMI,cAAc,GAAG;YACrBC,EAAE,EAAEJ,QAAQ,CAACI,EAAE,IAAIJ,QAAQ,CAACK,OAAO,IAAI,IAAI;YAC3CC,KAAK,EAAEN,QAAQ,CAACM,KAAK,IAAI,EAAE;YAC3BC,IAAI,EAAEP,QAAQ,CAACO,IAAI,IAAIP,QAAQ,CAACQ,QAAQ,IAAI,EAAE;YAC9CC,UAAU,EAAET,QAAQ,CAACS,UAAU,IAAIT,QAAQ,CAACU,SAAS,IAAI,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;YACjFC,UAAU,EAAEb,QAAQ,CAACa,UAAU,IAAIb,QAAQ,CAACc,SAAS,IAAI;UAC3D,CAAC;UAEDzB,OAAO,CAACc,cAAc,CAAC;UACvBP,YAAY,CAACmB,OAAO,CAAC,MAAM,EAAEd,IAAI,CAACe,SAAS,CAACb,cAAc,CAAC,CAAC;QAC9D,CAAC,CAAC,OAAOc,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAClD;MACF;IACF,CAAC;IAEDnB,YAAY,CAAC,CAAC;;IAEd;IACA,MAAMqB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,IAAIvB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;UACjC;UACA,MAAMuB,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;YAC9DC,OAAO,EAAE;cACP,eAAe,EAAE,UAAU1B,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;YAC1D;UACF,CAAC,CAAC;UAEF,IAAIuB,QAAQ,CAACG,EAAE,EAAE;YACf,MAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;YACtClC,QAAQ,CAACiC,QAAQ,CAAC;YAClB5B,YAAY,CAACmB,OAAO,CAAC,OAAO,EAAEd,IAAI,CAACe,SAAS,CAACQ,QAAQ,CAAC,CAAC;YACvD;UACF;QACF;;QAEA;QACA,MAAME,WAAW,GAAG9B,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACjD,IAAI6B,WAAW,EAAE;UACfnC,QAAQ,CAACU,IAAI,CAACC,KAAK,CAACwB,WAAW,CAAC,CAAC;QACnC;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZT,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEU,GAAG,CAAC;QACtD;QACA,MAAMD,WAAW,GAAG9B,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACjD,IAAI6B,WAAW,EAAE;UACfnC,QAAQ,CAACU,IAAI,CAACC,KAAK,CAACwB,WAAW,CAAC,CAAC;QACnC;MACF;IACF,CAAC;IAEDP,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAENjD,SAAS,CAAC,MAAM;IACd0B,YAAY,CAACmB,OAAO,CAAC,UAAU,EAAErB,UAAU,CAAC;IAC5CkC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,WAAW,EAAErC,UAAU,CAAC;EACzD,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,MAAMsC,cAAc,GAAGA,CAAA,KAAM;IAC3BrC,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;EAED,MAAMuC,WAAW,GAAIjC,QAAQ,IAAK;IAChC;IACA,MAAMG,cAAc,GAAG;MACrBC,EAAE,EAAEJ,QAAQ,CAACI,EAAE,IAAIJ,QAAQ,CAACK,OAAO,IAAI,IAAI;MAC3CC,KAAK,EAAEN,QAAQ,CAACM,KAAK,IAAI,EAAE;MAC3BC,IAAI,EAAEP,QAAQ,CAACO,IAAI,IAAIP,QAAQ,CAACQ,QAAQ,IAAI,EAAE;MAC9CC,UAAU,EAAET,QAAQ,CAACS,UAAU,IAAIT,QAAQ,CAACU,SAAS,IAAI,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACjFC,UAAU,EAAEb,QAAQ,CAACa,UAAU,IAAIb,QAAQ,CAACc,SAAS,IAAI;IAC3D,CAAC;IAEDzB,OAAO,CAACc,cAAc,CAAC;IACvBP,YAAY,CAACmB,OAAO,CAAC,MAAM,EAAEd,IAAI,CAACe,SAAS,CAACb,cAAc,CAAC,CAAC;EAC9D,CAAC;EAED,MAAM+B,YAAY,GAAGA,CAAA,KAAM;IACzB7C,OAAO,CAAC,IAAI,CAAC;IACbE,QAAQ,CAAC,EAAE,CAAC;IACZE,aAAa,CAAC,IAAI,CAAC;IACnBG,YAAY,CAACuC,UAAU,CAAC,MAAM,CAAC;IAC/BvC,YAAY,CAACuC,UAAU,CAAC,OAAO,CAAC;IAChCvC,YAAY,CAACuC,UAAU,CAAC,OAAO,CAAC;EAClC,CAAC;EAED,MAAMC,gBAAgB,GAAIC,WAAW,IAAK;IACxC;IACA,MAAMlC,cAAc,GAAG;MACrB,GAAGf,IAAI;MACP,GAAGiD,WAAW;MACdjC,EAAE,EAAEiC,WAAW,CAACjC,EAAE,IAAIiC,WAAW,CAAChC,OAAO,IAAIjB,IAAI,CAACgB,EAAE;MACpDG,IAAI,EAAE8B,WAAW,CAAC9B,IAAI,IAAI8B,WAAW,CAAC7B,QAAQ,IAAIpB,IAAI,CAACmB,IAAI;MAC3DE,UAAU,EAAE4B,WAAW,CAAC5B,UAAU,IAAI4B,WAAW,CAAC3B,SAAS,IAAItB,IAAI,CAACqB,UAAU;MAC9EI,UAAU,EAAEwB,WAAW,CAACxB,UAAU,IAAIwB,WAAW,CAACvB,SAAS,IAAI1B,IAAI,CAACyB;IACtE,CAAC;IAEDxB,OAAO,CAACc,cAAc,CAAC;IACvBP,YAAY,CAACmB,OAAO,CAAC,MAAM,EAAEd,IAAI,CAACe,SAAS,CAACb,cAAc,CAAC,CAAC;EAC9D,CAAC;EAED,MAAMmC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,OAAO,GAAG;MACdnC,EAAE,EAAEO,IAAI,CAAC6B,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;MACzBC,KAAK,EAAE,aAAa;MACpBC,QAAQ,EAAE,EAAE;MACZjC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACpC,CAAC;IAED,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAC9DuB,MAAM,EAAE,MAAM;QACdtB,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAU1B,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC1D,CAAC;QACDgC,IAAI,EAAE5B,IAAI,CAACe,SAAS,CAACuB,OAAO;MAC9B,CAAC,CAAC;MAEF,IAAInB,QAAQ,CAACG,EAAE,EAAE;QACf,MAAMsB,SAAS,GAAG,MAAMzB,QAAQ,CAACK,IAAI,CAAC,CAAC;QACvC,IAAI,CAACoB,SAAS,CAACF,QAAQ,EAAEE,SAAS,CAACF,QAAQ,GAAG,EAAE;QAChD,MAAMG,YAAY,GAAG,CAACD,SAAS,EAAE,GAAGvD,KAAK,CAAC;QAC1CC,QAAQ,CAACuD,YAAY,CAAC;QACtBrD,aAAa,CAACoD,SAAS,CAAC;QACxBjD,YAAY,CAACmB,OAAO,CAAC,OAAO,EAAEd,IAAI,CAACe,SAAS,CAAC8B,YAAY,CAAC,CAAC;MAC7D,CAAC,MAAM;QACL;QACA,MAAMA,YAAY,GAAG,CAACP,OAAO,EAAE,GAAGjD,KAAK,CAAC;QACxCC,QAAQ,CAACuD,YAAY,CAAC;QACtBrD,aAAa,CAAC8C,OAAO,CAAC;QACtB3C,YAAY,CAACmB,OAAO,CAAC,OAAO,EAAEd,IAAI,CAACe,SAAS,CAAC8B,YAAY,CAAC,CAAC;MAC7D;IACF,CAAC,CAAC,OAAOnB,GAAG,EAAE;MACZT,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEU,GAAG,CAAC;MAC9C;MACA,MAAMmB,YAAY,GAAG,CAACP,OAAO,EAAE,GAAGjD,KAAK,CAAC;MACxCC,QAAQ,CAACuD,YAAY,CAAC;MACtBrD,aAAa,CAAC8C,OAAO,CAAC;MACtB3C,YAAY,CAACmB,OAAO,CAAC,OAAO,EAAEd,IAAI,CAACe,SAAS,CAAC8B,YAAY,CAAC,CAAC;IAC7D;EACF,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAOC,MAAM,IAAK;IACzC,IAAI;MACF,MAAM5B,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC2B,MAAM,EAAE,EAAE;QACxEJ,MAAM,EAAE,QAAQ;QAChBtB,OAAO,EAAE;UACP,eAAe,EAAE,UAAU1B,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC1D;MACF,CAAC,CAAC;MAEF,IAAIuB,QAAQ,CAACG,EAAE,EAAE;QACf,MAAMuB,YAAY,GAAGxD,KAAK,CAAC2D,MAAM,CAACC,IAAI,IAAIA,IAAI,CAAC9C,EAAE,KAAK4C,MAAM,CAAC;QAC7DzD,QAAQ,CAACuD,YAAY,CAAC;QACtB,IAAI,CAAAtD,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEY,EAAE,MAAK4C,MAAM,EAAE;UAC7BvD,aAAa,CAAC,IAAI,CAAC;QACrB;QACAG,YAAY,CAACmB,OAAO,CAAC,OAAO,EAAEd,IAAI,CAACe,SAAS,CAAC8B,YAAY,CAAC,CAAC;MAC7D;IACF,CAAC,CAAC,OAAOnB,GAAG,EAAE;MACZT,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEU,GAAG,CAAC;MAC1C;MACA,MAAMmB,YAAY,GAAGxD,KAAK,CAAC2D,MAAM,CAACC,IAAI,IAAIA,IAAI,CAAC9C,EAAE,KAAK4C,MAAM,CAAC;MAC7DzD,QAAQ,CAACuD,YAAY,CAAC;MACtB,IAAI,CAAAtD,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEY,EAAE,MAAK4C,MAAM,EAAE;QAC7BvD,aAAa,CAAC,IAAI,CAAC;MACrB;MACAG,YAAY,CAACmB,OAAO,CAAC,OAAO,EAAEd,IAAI,CAACe,SAAS,CAAC8B,YAAY,CAAC,CAAC;IAC7D;EACF,CAAC;EAED,oBACE7D,OAAA,CAACb,MAAM;IAAA+E,QAAA,eACLlE,OAAA;MAAKmE,SAAS,EAAE,OAAO1D,UAAU,GAAG,MAAM,GAAG,OAAO,EAAG;MAAAyD,QAAA,gBACrDlE,OAAA,CAACT,MAAM;QACLY,IAAI,EAAEA,IAAK;QACXiE,QAAQ,EAAEnB,YAAa;QACvBxC,UAAU,EAAEA,UAAW;QACvBsC,cAAc,EAAEA;MAAe;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACFxE,OAAA;QAAMmE,SAAS,EAAC,cAAc;QAAAD,QAAA,eAC5BlE,OAAA,CAACZ,MAAM;UAAA8E,QAAA,gBACLlE,OAAA,CAACX,KAAK;YACJoF,IAAI,EAAC,QAAQ;YACbC,OAAO,EACLvE,IAAI,gBACFH,OAAA,CAACV,QAAQ;cAACqF,EAAE,EAAC;YAAG;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,gBAEnBxE,OAAA,CAACN,KAAK;cAACkF,OAAO,EAAE5B,WAAY;cAACvC,UAAU,EAAEA;YAAW;cAAA4D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAEzD;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACFxE,OAAA,CAACX,KAAK;YACJoF,IAAI,EAAC,WAAW;YAChBC,OAAO,EACLvE,IAAI,gBACFH,OAAA,CAACV,QAAQ;cAACqF,EAAE,EAAC;YAAG;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,gBAEnBxE,OAAA,CAACL,QAAQ;cAACiF,OAAO,EAAE5B,WAAY;cAACvC,UAAU,EAAEA;YAAW;cAAA4D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAE5D;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACFxE,OAAA,CAACX,KAAK;YACJoF,IAAI,EAAC,UAAU;YACfC,OAAO,EACLvE,IAAI,gBACFH,OAAA,CAACJ,WAAW;cACVO,IAAI,EAAEA,IAAK;cACXiE,QAAQ,EAAEnB,YAAa;cACvB4B,YAAY,EAAE1B,gBAAiB;cAC/B1C,UAAU,EAAEA;YAAW;cAAA4D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxB,CAAC,gBAEFxE,OAAA,CAACV,QAAQ;cAACqF,EAAE,EAAC;YAAQ;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAE1B;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACFxE,OAAA,CAACX,KAAK;YACJoF,IAAI,EAAC,OAAO;YACZC,OAAO,EACLvE,IAAI,gBACFH,OAAA;cAAKmE,SAAS,EAAC,aAAa;cAAAD,QAAA,gBAC1BlE,OAAA,CAACP,OAAO;gBACNY,KAAK,EAAEA,KAAM;gBACbE,UAAU,EAAEA,UAAW;gBACvBuE,YAAY,EAAEtE,aAAc;gBAC5BuE,SAAS,EAAE1B,aAAc;gBACzB2B,YAAY,EAAElB,gBAAiB;gBAC/BrD,UAAU,EAAEA,UAAW;gBACvBN,IAAI,EAAEA;cAAK;gBAAAkE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACZ,CAAC,eACFxE,OAAA;gBAAKmE,SAAS,EAAC,gBAAgB;gBAAAD,QAAA,EAC5B3D,UAAU,gBACTP,OAAA,CAACH,QAAQ;kBACP6D,QAAQ,EAAEnD,UAAU,CAACmD,QAAQ,IAAI,EAAG;kBACpCuB,aAAa,EAAE,MAAOC,OAAO,IAAK;oBAChC;oBACA,MAAMC,UAAU,GAAG;sBACjBhE,EAAE,EAAEO,IAAI,CAAC6B,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;sBACzB4B,OAAO,EAAEF,OAAO;sBAChBG,MAAM,EAAE,MAAM;sBACdC,SAAS,EAAE,IAAI5D,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;oBACpC,CAAC;oBAED,MAAM4D,WAAW,GAAG;sBAClB,GAAGhF,UAAU;sBACbmD,QAAQ,EAAE,CAAC,IAAInD,UAAU,CAACmD,QAAQ,IAAI,EAAE,CAAC,EAAEyB,UAAU;oBACvD,CAAC;;oBAED;oBACA,MAAMtB,YAAY,GAAGxD,KAAK,CAACmF,GAAG,CAACvB,IAAI,IACjCA,IAAI,CAAC9C,EAAE,KAAKZ,UAAU,CAACY,EAAE,GAAGoE,WAAW,GAAGtB,IAC5C,CAAC;oBACD3D,QAAQ,CAACuD,YAAY,CAAC;oBACtBrD,aAAa,CAAC+E,WAAW,CAAC;oBAC1B5E,YAAY,CAACmB,OAAO,CAAC,OAAO,EAAEd,IAAI,CAACe,SAAS,CAAC8B,YAAY,CAAC,CAAC;oBAE3D,IAAI;sBACF;sBACA,MAAM1B,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;wBACpEuB,MAAM,EAAE,MAAM;wBACdtB,OAAO,EAAE;0BACP,cAAc,EAAE,kBAAkB;0BAClC,eAAe,EAAE,UAAU1B,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;wBAC1D,CAAC;wBACDgC,IAAI,EAAE5B,IAAI,CAACe,SAAS,CAAC;0BACnBmD,OAAO,EAAEA,OAAO;0BAChBO,UAAU,EAAE;wBACd,CAAC;sBACH,CAAC,CAAC;sBAEF,IAAItD,QAAQ,CAACG,EAAE,EAAE;wBACf,MAAMoD,IAAI,GAAG,MAAMvD,QAAQ,CAACK,IAAI,CAAC,CAAC;;wBAElC;wBACA,MAAMmD,WAAW,GAAG;0BAClBxE,EAAE,EAAEO,IAAI,CAAC6B,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,GAAG,CAAC;0BAC7B4B,OAAO,EAAEM,IAAI,CAACvD,QAAQ;0BACtBkD,MAAM,EAAE,KAAK;0BACbC,SAAS,EAAE,IAAI5D,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;wBACpC,CAAC;wBAED,MAAMiE,SAAS,GAAG;0BAChB,GAAGL,WAAW;0BACd7B,QAAQ,EAAE,CAAC,IAAI6B,WAAW,CAAC7B,QAAQ,IAAI,EAAE,CAAC,EAAEiC,WAAW;wBACzD,CAAC;wBAED,MAAME,UAAU,GAAGxF,KAAK,CAACmF,GAAG,CAACvB,IAAI,IAC/BA,IAAI,CAAC9C,EAAE,KAAKZ,UAAU,CAACY,EAAE,GAAGyE,SAAS,GAAG3B,IAC1C,CAAC;wBAED3D,QAAQ,CAACuF,UAAU,CAAC;wBACpBrF,aAAa,CAACoF,SAAS,CAAC;wBACxBjF,YAAY,CAACmB,OAAO,CAAC,OAAO,EAAEd,IAAI,CAACe,SAAS,CAAC8D,UAAU,CAAC,CAAC;sBAC3D;oBACF,CAAC,CAAC,OAAOnD,GAAG,EAAE;sBACZT,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEU,GAAG,CAAC;sBAC5C;sBACA,MAAMoD,aAAa,GAAG;wBACpB3E,EAAE,EAAEO,IAAI,CAAC6B,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,GAAG,CAAC;wBAC7B4B,OAAO,EAAE,kDAAkD;wBAC3DC,MAAM,EAAE,KAAK;wBACbC,SAAS,EAAE,IAAI5D,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;sBACpC,CAAC;sBAED,MAAMoE,SAAS,GAAG;wBAChB,GAAGR,WAAW;wBACd7B,QAAQ,EAAE,CAAC,IAAI6B,WAAW,CAAC7B,QAAQ,IAAI,EAAE,CAAC,EAAEoC,aAAa;sBAC3D,CAAC;sBAED,MAAME,UAAU,GAAG3F,KAAK,CAACmF,GAAG,CAACvB,IAAI,IAC/BA,IAAI,CAAC9C,EAAE,KAAKZ,UAAU,CAACY,EAAE,GAAG4E,SAAS,GAAG9B,IAC1C,CAAC;sBAED3D,QAAQ,CAAC0F,UAAU,CAAC;sBACpBxF,aAAa,CAACuF,SAAS,CAAC;sBACxBpF,YAAY,CAACmB,OAAO,CAAC,OAAO,EAAEd,IAAI,CAACe,SAAS,CAACiE,UAAU,CAAC,CAAC;oBAC3D;kBACF,CAAE;kBACFC,KAAK,EAAExF,UAAU,GAAG,MAAM,GAAG,OAAQ;kBACrCyF,SAAS,EAAE;gBAAM;kBAAA7B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClB,CAAC,gBAEFxE,OAAA;kBAAKmE,SAAS,EAAC,iBAAiB;kBAAAD,QAAA,gBAC9BlE,OAAA;oBAAAkE,QAAA,GAAI,qBAAc,EAAC/D,IAAI,CAACmB,IAAI,IAAI,WAAW,EAAC,GAAC;kBAAA;oBAAA+C,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eAClDxE,OAAA;oBAAAkE,QAAA,EAAG;kBAA2E;oBAAAG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAG,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC/E;cACN;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,gBAENxE,OAAA,CAACV,QAAQ;cAACqF,EAAE,EAAC;YAAQ;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAE1B;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACFxE,OAAA,CAACX,KAAK;YACJoF,IAAI,EAAC,GAAG;YACRC,OAAO,EACLvE,IAAI,gBACFH,OAAA,CAACV,QAAQ;cAACqF,EAAE,EAAC;YAAO;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,gBAEvBxE,OAAA,CAACF,WAAW;cAACW,UAAU,EAAEA;YAAW;cAAA4D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAEzC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACPxE,OAAA,CAACR,MAAM;QAACiB,UAAU,EAAEA;MAAW;QAAA4D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACtE,EAAA,CAlXQD,GAAG;AAAAkG,EAAA,GAAHlG,GAAG;AAoXZ,eAAeA,GAAG;AAAC,IAAAkG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}